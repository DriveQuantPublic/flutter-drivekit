import 'package:flutter/foundation.dart';
import 'package:flutter_drivekit_trip_simulator_ios/src/adapter.dart';
import 'package:flutter_drivekit_trip_simulator_ios/src/trip_simulator_api.g.dart';
import 'package:flutter_drivekit_trip_simulator_platform_interface/flutter_drivekit_trip_simulator_platform_interface.dart';

/// The iOS implementation of [DriveKitTripSimulatorPlatform].
class DriveKitTripSimulatorIOS extends DriveKitTripSimulatorPlatform {
  /// Creates a new instance of [DriveKitTripSimulatorIOS].
  /// The optional [iosTripSimulatorApi] parameter is used for
  /// dependency injection in tests.
  DriveKitTripSimulatorIOS({IOSTripSimulatorApi? iosTripSimulatorApi})
      : iosTripSimulatorApi = iosTripSimulatorApi ?? IOSTripSimulatorApi();

  /// Registers this class as the default instance of
  /// [DriveKitTripSimulatorPlatform]
  static void registerWith() {
    DriveKitTripSimulatorPlatform.instance = DriveKitTripSimulatorIOS();
  }

  /// The instance of [IOSTripSimulatorApi], a class that provides access to the
  /// native methods via a method channel generated by pigeon.
  @visibleForTesting
  final IOSTripSimulatorApi iosTripSimulatorApi;

  @override
  Future<String> getPlatformName() => iosTripSimulatorApi.getPlatformName();

  @override
  Future<void> start(PresetTrip presetTrip) =>
      iosTripSimulatorApi.start(presetTrip.toPigeonImplementation());

  @override
  Future<void> stop() => iosTripSimulatorApi.stop();
}
