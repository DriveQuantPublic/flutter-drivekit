#!/bin/bash

# Define the hook directory and hook file path
HOOK_DIR=".git/hooks"
HOOK_FILE="$HOOK_DIR/pre-commit"

# Ensure the hook directory exists
if [ ! -d "$HOOK_DIR" ]; then
  echo "Error: Hook directory does not exist. Are you in the root of a Git repository?"
  exit 1
fi

# Create or overwrite the pre-commit hook file with the provided content
cat > "$HOOK_FILE" << 'EOF'
#!/bin/bash
# this file has been generated by execution of script setup_precommit_hook.sh

######### Kotlin #########
KotlinChangedFiles="$(git --no-pager diff --name-status --no-color --cached | awk '$1 != "D" && $NF ~ /\.kt?$/ { print $NF }')"

if [ -z "$KotlinChangedFiles" ]; then
    echo "No kotlin staged files."
    exit 0
fi;

echo "Running ktLint over these files:"
echo "$KotlinChangedFiles"

diff_kotlin=.git/unstaged-ktlint-git-hook.diff
git diff --color=never > $diff_kotlin
if [ -s $diff_kotlin]; then
  git apply -R $diff_kotlin
fi

./scripts/ktLintFormat.sh
gradleLint_command_exit_code=$?

echo "Completed ktLint run."

echo "$KotlinChangedFiles" | while read -r file; do
    if [ -f $file ]; then
        git add $file
    fi
done

if [ -s $diff_kotlin ]; then
  git apply --ignore-whitespace $diff_kotlin
fi
rm $diff_kotlin
unset diff_kotlin

echo "Completed ktlint hook."

######### Swift #########
SwiftChangedFiles="$(git --no-pager diff --name-status --no-color --cached | awk '$1 != "D" && $NF ~ /\.swift$/ { print $NF }')"

if [ -z "$SwiftChangedFiles" ]; then
    echo "No Swift staged files."
    exit 0
fi;

echo "Running swiftlint over these files:"
echo "$SwiftChangedFiles"

diff_swift=.git/unstaged-swiftlint-git-hook.diff
git diff --color=never > $diff_swift
if [ -s $diff_swift ]; then
  git apply -R $diff_swift
fi

./scripts/swiftLint.sh
swiftlint_command_exit_code=$?

echo "Completed swiftlint run."

echo "$SwiftChangedFiles" | while read -r file; do
    if [ -f $file ]; then
        git add $file
    fi
done

if [ -s $diff_swift ]; then
  git apply --ignore-whitespace $diff_swift
fi
rm $diff_swift
unset diff_swift

echo "Completed swiftlint hook."

exit $swiftlint_command_exit_code || $gradleLint_command_exit_code

EOF

# Make the hook file executable
chmod +x "$HOOK_FILE"

echo "Pre-commit hook has been set up successfully."
