#!/bin/bash

# Define the hook directory and hook file path
HOOK_DIR=".git/hooks"
HOOK_FILE="$HOOK_DIR/pre-commit"

# Ensure the hook directory exists
if [ ! -d "$HOOK_DIR" ]; then
  echo "Error: Hook directory does not exist. Are you in the root of a Git repository?"
  exit 1
fi

# Create or overwrite the pre-commit hook file with the provided content
cat > "$HOOK_FILE" << 'EOF'
#!/bin/bash
# this file has been generated by execution of script setup_precommit_hook.sh

CHANGED_FILES="$(git --no-pager diff --name-status --no-color --cached | awk '$1 != "D" && $NF ~ /\.swift?$/ { print $NF }')"

if [ -z "$CHANGED_FILES" ]; then
    echo "No Swift staged files."
    exit 0
fi;

echo "Running swiftlint over these files:"
echo "$CHANGED_FILES"

diff=.git/unstaged-swiftlint-git-hook.diff
git diff --color=never > $diff
if [ -s $diff ]; then
  git apply -R $diff
fi

./scripts/swiftLint.sh
swiftlint_command_exit_code=$?

echo "Completed swiftlint run."

echo "$CHANGED_FILES" | while read -r file; do
    if [ -f $file ]; then
        git add $file
    fi
done

if [ -s $diff ]; then
  git apply --ignore-whitespace $diff
fi
rm $diff
unset diff

echo "Completed swiftlint hook."
exit $swiftlint_command_exit_code
EOF

# Make the hook file executable
chmod +x "$HOOK_FILE"

echo "Pre-commit hook has been set up successfully."
